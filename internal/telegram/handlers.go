package telegram

import (
	"fmt"
	"gopkg.in/telebot.v3"
	"log"
	"net/url"
	"strconv"
	"tgbot-url-keeper/internal/repository/storage"
)

const (
	StateDefault = iota
	StateAwaitingLinkID
)

var userStates = make(map[int64]int)

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
func handleStart(c telebot.Context, menu *telebot.ReplyMarkup) error {
	welcomeText := `üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π!
–ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∞—Å–∏–ª–∏–π, –∏ —è ‚Äî —Å–∫—Ä–æ–º–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä —Å—Å—ã–ª–æ–∫! üèöÔ∏èüìö

üìé –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É, –∏ —è —Å–æ—Ö—Ä–∞–Ω—é –µ—ë.
üìÇ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏? –ù–∞–∂–º–∏—Ç–µ ¬´–ú–æ–∏ —Å—Å—ã–ª–∫–∏¬ª.
üóëÔ∏è –ù—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É? –ñ–º–∏—Ç–µ ¬´–£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É¬ª.`
	return c.Send(welcomeText, menu)
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏
func handleSaveLink(c telebot.Context) error {
	return c.Send("üì• –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É, –∏ —è –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –¥–æ–±–∞–≤–ª—é –µ—ë –≤ –≤–∞—à—É –∫–æ–ª–ª–µ–∫—Ü–∏—é!")
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫
func handleGetLinks(c telebot.Context) error {
	userID := c.Sender().ID
	links, err := storage.GetLinks(userID)
	if err != nil {
		log.Println("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫:", err)
		return c.Send("‚ùå –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.")
	}

	if len(links) == 0 {
		return c.Send("üì≠ –í–∞—à–∞ –∫–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–∫–∞ –ø—É—Å—Ç–∞.")
	}

	var message string
	for i, link := range links { // –ò—Å–ø–æ–ª—å–∑—É–µ–º i + 1 –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –Ω—É–º–µ—Ä–∞—Ü–∏–∏
		message += fmt.Sprintf("üîó %d: %s\n", i+1, link.URL)
	}

	return c.Send("üìÇ *–í–∞—à–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:*\n" + message)
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏
func handleDeleteLink(c telebot.Context) error {
	userID := c.Sender().ID
	userStates[userID] = StateAwaitingLinkID
	return c.Send("üî¢ –í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä (ID) —Å—Å—ã–ª–∫–∏ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è...")
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏–µ)
func handleText(c telebot.Context) error {
	userID := c.Sender().ID
	text := c.Text()

	if userStates[userID] == StateAwaitingLinkID {
		linkID, err := strconv.Atoi(text)
		if err != nil {
			return c.Send("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π —á–∏—Å–ª–æ–≤–æ–π ID.")
		}

		if err := storage.DeleteLink(userID, strconv.Itoa(linkID)); err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:", err)
			return c.Send("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Å—Å—ã–ª–∫–∏: " + err.Error())
		}

		userStates[userID] = StateDefault
		return c.Send("‚úÖ –°—Å—ã–ª–∫–∞ —É–¥–∞–ª–µ–Ω–∞!")
	}

	if isValidURL(text) {
		if err := storage.SaveLink(userID, text); err != nil {
			log.Println("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏:", err)
			return c.Send("‚ùå –¢–∞–∫–∞—è —Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å.")
		}
		return c.Send("‚úÖ –°—Å—ã–ª–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: " + text)
	}

	return c.Send("ü§î –≠—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
}

func handleHelp(c telebot.Context) error {
	return c.Send(`üìù *–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º —á—É–¥–µ—Å–Ω—ã–º –±–æ—Ç–æ–º?*

üíæ *–î–æ–±–∞–≤–∏—Ç—å —Å—Å—ã–ª–∫—É:* –ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ –µ—ë, –∏ —è –µ—ë —Å–æ—Ö—Ä–∞–Ω—é –Ω–∞–≤–µ–∫–∏!
üìÇ *–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å—Å—ã–ª–∫–∏:* –ñ–º–∏ ¬´–û—Ç–∫—Ä—ã—Ç—å —Å—É–Ω–¥—É–∫¬ª ‚Äî –∏ –ø–µ—Ä–µ–¥ —Ç–æ–±–æ–π —Ä–∞—Å–∫—Ä–æ–µ—Ç—Å—è –¥—Ä–µ–≤–Ω–∏–π –∞—Ä—Ö–∏–≤.
üóëÔ∏è *–£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É:* –ù–∞–∂–º–∏ ¬´–ò–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç —Ö–ª–∞–º–∞¬ª, —É–∫–∞–∂–∏ ID ‚Äî –∏ —è —Å–æ—Ç—Ä—É –µ—ë —Å –ª–∏—Ü–∞ –∑–µ–º–ª–∏.

üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π –º–µ–Ω—è –∫–∞–∫ —Ü–∏—Ñ—Ä–æ–≤—É—é –∑–∞–ø–∏—Å–Ω—É—é –∫–Ω–∏–∂–∫—É, –∏ —Ç–≤–æ–∏ —Å—Å—ã–ª–∫–∏ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ –∑–∞—Ç–µ—Ä—è—é—Ç—Å—è!`)
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–∫–∏
func isValidURL(u string) bool {
	_, err := url.ParseRequestURI(u)
	return err == nil
}
