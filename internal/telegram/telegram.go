package telegram

import (
	"fmt"
	"gopkg.in/telebot.v3"
	"log"
	"net/url"
	"tgbot-url-keeper/internal/repository/storage"
)

const (
	StateDefault = iota
	StateAwaitingLinkID
)

var userStates = make(map[int64]int)

func SetupBot(bot *telebot.Bot) {

	menu := &telebot.ReplyMarkup{ResizeKeyboard: true}
	btnStart := menu.Text("üöÄ –°—Ç–∞—Ä—Ç")
	btnSave := menu.Text("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Å—Å—ã–ª–∫—É")
	btnLinks := menu.Text("üìÇ –ú–æ–∏ —Å—Å—ã–ª–∫–∏")
	btnDelete := menu.Text("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É")
	btnHelp := menu.Text("‚ùì –ü–æ–º–æ—â—å")

	menu.Reply(
		menu.Row(btnStart),
		menu.Row(btnSave),
		menu.Row(btnLinks),
		menu.Row(btnDelete),
		menu.Row(btnHelp),
	)

	bot.Handle("/start", func(c telebot.Context) error {
		return c.Send(
			`üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π!
–ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∞—Å–∏–ª–∏–π, –∏ —è ‚Äî —Å–∫—Ä–æ–º–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä —Å—Å—ã–ª–æ–∫! üèöÔ∏èüìö

–Ø –≤–æ–≤—Å–µ –Ω–µ –±–µ–∑–¥–æ–º–Ω—ã–π –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏, –ø—Ä–æ—Å—Ç–æ –≤–µ–¥—É –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, —Å–æ–±–∏—Ä–∞—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω–Ω—ã–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å—ã. üíº‚ú®

üìé –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ ‚Äî –∏ —è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–ª–æ–∂—É –µ—ë –≤ —Å–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é.
üìÇ –ñ–µ–ª–∞–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏? –ö–æ–Ω–µ—á–Ω–æ, —è –∏—Ö –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–∑–ª–æ–∂–∏–ª –ø–æ –ø–æ–ª–æ—á–∫–∞–º!
üóëÔ∏è –•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ —É–¥–∞–ª–∏—Ç—å? –†–∞–∑—É–º–µ–µ—Ç—Å—è, —Å –±–æ–ª—å—à–∏–º —É–≤–∞–∂–µ–Ω–∏–µ–º —É–±–µ—Ä—É –Ω–µ–Ω—É–∂–Ω—É—é —Å—Å—ã–ª–∫—É.

–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! –ü—É—Å—Ç—å –≤–∞—à –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Ö–æ—Ä–æ—à–∏—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.`,
			menu,
		)
	})

	bot.Handle(&btnStart, func(c telebot.Context) error {
		return c.Send(
			`üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —É–≤–∞–∂–∞–µ–º—ã–π!
–ú–µ–Ω—è –∑–æ–≤—É—Ç –í–∞—Å–∏–ª–∏–π, –∏ —è ‚Äî —Å–∫—Ä–æ–º–Ω—ã–π –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä —Å—Å—ã–ª–æ–∫! üèöÔ∏èüìö

–Ø –≤–æ–≤—Å–µ –Ω–µ –±–µ–∑–¥–æ–º–Ω—ã–π –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏, –ø—Ä–æ—Å—Ç–æ –≤–µ–¥—É –º–∏–Ω–∏–º–∞–ª–∏—Å—Ç–∏—á–Ω—ã–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏, —Å–æ–±–∏—Ä–∞—è –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ —Ü–µ–Ω–Ω—ã–µ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Ä–µ—Å—É—Ä—Å—ã. üíº‚ú®

üìé –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å —Å—Å—ã–ª–∫–∞, –∫–æ—Ç–æ—Ä—É—é –≤—ã –±—ã —Ö–æ—Ç–µ–ª–∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—ë –º–Ω–µ ‚Äî –∏ —è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –ø–æ–ª–æ–∂—É –µ—ë –≤ —Å–≤–æ—é –∫–æ–ª–ª–µ–∫—Ü–∏—é.
üìÇ –ñ–µ–ª–∞–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ä–∞–Ω–µ–µ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–º–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏? –ö–æ–Ω–µ—á–Ω–æ, —è –∏—Ö –∞–∫–∫—É—Ä–∞—Ç–Ω–æ —Ä–∞–∑–ª–æ–∂–∏–ª –ø–æ –ø–æ–ª–æ—á–∫–∞–º!
üóëÔ∏è –•–æ—Ç–∏—Ç–µ —á—Ç–æ-—Ç–æ —É–¥–∞–ª–∏—Ç—å? –†–∞–∑—É–º–µ–µ—Ç—Å—è, —Å –±–æ–ª—å—à–∏–º —É–≤–∞–∂–µ–Ω–∏–µ–º —É–±–µ—Ä—É –Ω–µ–Ω—É–∂–Ω—É—é —Å—Å—ã–ª–∫—É.

–ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! –ü—É—Å—Ç—å –≤–∞—à –¥–µ–Ω—å –±—É–¥–µ—Ç –ø–æ–ª–æ–Ω —Ö–æ—Ä–æ—à–∏—Ö –æ—Ç–∫—Ä—ã—Ç–∏–π –∏ –ø–æ–ª–µ–∑–Ω—ã—Ö —Å—Å—ã–ª–æ–∫.`,
			menu,
		)
	})

	bot.Handle(&btnSave, func(c telebot.Context) error {
		return c.Send("üì• –û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É, –∏ —è –∞–∫–∫—É—Ä–∞—Ç–Ω–æ –¥–æ–±–∞–≤–ª—é –µ—ë –≤ –≤–∞—à—É –∫–æ–ª–ª–µ–∫—Ü–∏—é!")
	})

	bot.Handle(telebot.OnText, func(c telebot.Context) error {
		userID := c.Sender().ID
		text := c.Text()

		if userStates[userID] == StateAwaitingLinkID {
			linkID := text

			log.Printf("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª linkID=%s –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è", linkID)

			if err := storage.DeleteLink(userID, linkID); err != nil {
				return c.Send("‚ùå –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫: " + err.Error())
			}

			userStates[userID] = StateDefault
			return c.Send("‚úÖ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ –º–æ–µ–π —Ç–µ–ª–µ–∂–∫–∏. –¢–µ–ø–µ—Ä—å –µ—ë –Ω–µ—Ç –¥–∞–∂–µ –Ω–∞ —Å–≤–∞–ª–∫–µ! üóëÔ∏è")
		}

		if isValidURL(text) {
			if err := storage.SaveLink(userID, text); err != nil {
				log.Printf("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Å—ã–ª–∫–∏: %v", err)
				return c.Send("‚ùå –¢–∞–∫–∞—è —Å—Å—ã–ª–∫–∞ —É–∂–µ –µ—Å—Ç—å.")
			}
			return c.Send("‚úÖ –°—Å—ã–ª–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –º–æ—é —Ç–µ–ª–µ–∂–∫—É: " + text)
		}

		return c.Send("ü§î –•–º.. —ç—Ç–æ –Ω–µ –ø–æ—Ö–æ–∂–µ –Ω–∞ —Å—Å—ã–ª–∫—É. –ü–æ–ø—Ä–æ–±—É–π –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á—Ç–æ-—Ç–æ, —Ç–∏–ø–∞ —Ö—Ç—Ç–ø –∏–ª–∏ —Å—Ö—Ç—Ç–ø.")
	})

	bot.Handle(&btnLinks, func(c telebot.Context) error {
		userID := c.Sender().ID

		links, err := storage.GetLinks(userID)
		if err != nil {
			return c.Send("‚ùå –û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫: " + err.Error())
		}

		if len(links) == 0 {
			return c.Send("üì≠ –¢–≤–æ—è —Ç–µ–ª–µ–∂–∫–∞ –ø—É—Å—Ç–∞. –ú–æ–∂–µ—Ç, –¥–æ–±–∞–≤–∏–º —Ç—É–¥–∞ –ø–∞—Ä–æ—á–∫—É —Å—Å—ã–ª–æ–∫? üòâ")
		}

		var message string
		for _, link := range links {
			message += fmt.Sprintf("üîó –°—Å—ã–ª–∫–∞ #%d: %s\n", link.ID, link.URL)
		}

		return c.Send("üìÇ *–¢–≤–æ–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Å—Å—ã–ª–∫–∏:*\n" + message)
	})

	bot.Handle(&btnDelete, func(c telebot.Context) error {
		userID := c.Sender().ID
		userStates[userID] = StateAwaitingLinkID
		log.Printf("[DEBUG] –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ —Å–æ—Å—Ç–æ—è–Ω–∏–µ StateAwaitingLinkID –¥–ª—è userID=%d", userID)
		return c.Send("üî¢ –í–≤–µ–¥–∏ –Ω–æ–º–µ—Ä (ID) —Å—Å—ã–ª–∫–∏...")
	})

	bot.Handle(&btnHelp, func(c telebot.Context) error {
		return c.Send(`üìú –î–æ—Ä–æ–≥–∏–µ –º–æ–∏, –∫–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –º–æ–∏–º–∏ —Å–∫—Ä–æ–º–Ω—ã–º–∏ —É—Å–ª—É–≥–∞–º–∏?
üíæ –ï—Å—Ç—å —Ü–µ–Ω–Ω–∞—è —Å—Å—ã–ª–æ—á–∫–∞? –°–º–µ–ª–æ –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ –º–Ω–µ! –Ø —Å–æ—Ö—Ä–∞–Ω—é –µ—ë –±–µ—Ä–µ–∂–Ω–æ, —Å–ª–æ–≤–Ω–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å—É—Ö–∞—Ä–∏–∫ –≤ –∫–∞—Ä–º–∞–Ω–µ.
üìÇ –•–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å, —á—Ç–æ —É–∂–µ –Ω–∞–∫–æ–ø–∏–ª–æ—Å—å? –ù–∞–∂–º–∏—Ç–µ ¬´–ú–æ–∏ —Å—Å—ã–ª–∫–∏¬ª, –∏ —è, –∫–∞–∫ –Ω–∞—Å—Ç–æ—è—â–∏–π –∞—Ä—Ö–∏–≤–∞—Ä–∏—É—Å, –¥–æ—Å—Ç–∞–Ω—É –≤—Å—ë –∏–∑ —Å–≤–æ–µ–≥–æ –Ω–∞–¥—ë–∂–Ω–æ–≥–æ –º–µ—à–∫–∞.
üóëÔ∏è –ù–∞–¥–æ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –Ω–µ–Ω—É–∂–Ω–æ–π —Å—Å—ã–ª–∫–∏? –ñ–º–∏—Ç–µ ¬´–£–¥–∞–ª–∏—Ç—å —Å—Å—ã–ª–∫—É¬ª, –∏ —è, —Å —É–≤–∞–∂–µ–Ω–∏–µ–º –∫ –≤–∞—à–∏–º —Ä–µ—à–µ–Ω–∏—è–º, –æ—Ç–ø—Ä–∞–≤–ª—é –µ—ë –Ω–∞ –ø–æ–∫–æ–π.
‚ùì –í–æ–ø—Ä–æ—Å—ã, —Å–æ–º–Ω–µ–Ω–∏—è, —ç–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –∫—Ä–∏–∑–∏—Å? –ù–∞–∂–º–∏—Ç–µ ¬´–ü–æ–º–æ—â—å¬ª, –∏ —è –ø–æ–º–æ–≥—É, —á–µ–º —Å–º–æ–≥—É.`)
	})

}

func isValidURL(u string) bool {
	_, err := url.ParseRequestURI(u)
	return err == nil
}
